@import "/src/styles";
.tiptap_editor_container {
  background: transparent;
  @include lessThan(md) {
    padding: 4px 4px 0px 4px;
  }
  .hide_toolbar {
    display: none !important;
  }

  .toolbar_items {
    display: flex;
    // justify-content: space-between;
    align-items: center;
    gap: 5px;
    max-width: 500px;
    flex-wrap: wrap;
    @include lessThan(md) {
      justify-content: flex-start;
    }
    .emoji {
      position: relative;
    }
    .icon {
      padding: 4px 8px;
      width: fit-content;
      height: 28px;
      display: flex;
      justify-content: center;
      align-items: center;
      outline: none;
      border: none;
      border-radius: 4px;
      background-color: transparent;
      color: var(--primary-text);
      svg {
        color: var(--secondary-text);
      }
      @include lessThan(md) {
        padding: 2px 4px;
        height: 25px;
        svg {
          width: 12px;
          height: 12px;
        }
      }
      &:hover {
        background-color: var(--tertiary-bg);
        color: var(--primary);
        cursor: pointer;
        svg {
          color: var(--primary);
        }
      }
    }

    .disabled {
      opacity: 0.7;

      &:hover {
        background-color: transparent;
        svg {
          color: var(--primary-text);
        }
        cursor: not-allowed;
      }
    }

    .is-active {
      background-color: var(--tertiary-bg);
      color: var(--primary);
      cursor: pointer;
      svg {
        color: var(--primary) !important;
      }
    }
  }

  .ProseMirror {
    &:focus-visible {
      outline: none !important;
      border: none;
    }
  }

  .tiptap {
    p,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    li,
    span,
    code,
    blockquote,
    strong {
      color: var(--primary-text) !important;
      @include lessThan(md) {
        font-size: $font-size-xsm;
      }
    }

    blockquote {
      padding-left: 8px;
      border-left: 2px solid var(--divider);
      background-color: var(--tertiary-bg);
    }

    li {
      margin-left: 20px;
    }

    a {
      color: var(--link-color);
      cursor: pointer;

      &:hover {
        color: var(--link-color-hover);
      }
    }
  }

  .editor_content {
    padding: 8px;
    height: fit-content;
    // min-height: 90px;
    cursor: text;
    div {
      p {
        font-size: $font-size-sm;
        @include lessThan(md) {
          font-size: $font-size-xsm;
        }
      }
    }
  }
}

a.link {
  color: var(--link-color) !important;
  text-decoration: underline;
  cursor: pointer;

  &:hover {
    color: var(--link-color-hover) !important;
    text-decoration: none;
  }
}

.link_Modal {
  max-width: 400px !important;
  input {
    font-size: 15px !important;

    &::placeholder {
      font-size: 15px !important;
    }
  }

  button {
    // width: 64px !important;
    // height: 32px !important;
    background-color: var(--tertiary-bg) !important;
    color: var(--primary-text) !important;

    &:hover {
      background-color: var(--tertiary-bg) !important;
      color: var(--primary) !important;
    }
  }
}

.modal {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1000;
  background-color: transparent;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  width: 400px;
  max-width: 100%;
}

.modal-content {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.char_count {
  display: flex;
  justify-content: flex-end;
  font-size: 12px;
  &.withinLimit {
    color: var(--divider);
  }
  &.outOfLimit {
    color: var(--error);
  }
}

.editor_content p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: var(--label-text);
  pointer-events: none;
  height: 0;
}

.customHeight {
  height: 90px;
  // p {
  //   min-height: 90px;
  // }
}
